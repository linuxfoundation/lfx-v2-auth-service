// Code generated by goa v3.22.2, DO NOT EDIT.
//
// auth-service client
//
// Command:
// $ goa gen github.com/linuxfoundation/lfx-v2-auth-service/cmd/server/design

package authservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "auth-service" service client.
type Client struct {
	LivezEndpoint  goa.Endpoint
	ReadyzEndpoint goa.Endpoint
}

// NewClient initializes a "auth-service" service client given the endpoints.
func NewClient(livez, readyz goa.Endpoint) *Client {
	return &Client{
		LivezEndpoint:  livez,
		ReadyzEndpoint: readyz,
	}
}

// Livez calls the "livez" endpoint of the "auth-service" service.
func (c *Client) Livez(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.LivezEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}

// Readyz calls the "readyz" endpoint of the "auth-service" service.
// Readyz may return the following errors:
//   - "ServiceUnavailable" (type ServiceUnavailable)
//   - error: internal error
func (c *Client) Readyz(ctx context.Context) (res []byte, err error) {
	var ires any
	ires, err = c.ReadyzEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.([]byte), nil
}
